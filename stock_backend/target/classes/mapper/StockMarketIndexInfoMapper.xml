<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pluto.stock.mapper.StockMarketIndexInfoMapper">

    <resultMap id="BaseResultMap" type="com.pluto.stock.pojo.StockMarketIndexInfo">
            <id property="id" column="id" jdbcType="VARCHAR"/>
            <result property="markId" column="mark_Id" jdbcType="CHAR"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
            <result property="markName" column="mark_name" jdbcType="VARCHAR"/>
            <result property="curPoint" column="cur_point" jdbcType="DECIMAL"/>
            <result property="currentPrice" column="current_price" jdbcType="DECIMAL"/>
            <result property="updownRate" column="updown_rate" jdbcType="DECIMAL"/>
            <result property="tradeAccount" column="trade_account" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="BIGINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,mark_Id,cur_time,
        mark_name,cur_point,current_price,
        updown_rate,trade_account,trade_volume
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_market_index_info
        where  id = #{id,jdbcType=VARCHAR} 
    </select>
    <select id="getMarketInfo" resultType="com.pluto.stock.common.utils.InnerMarketDomain">
        select
            tmp.*,
            sml.open_price as openPrice,
            sml.pre_close_price as preClosePrice
        from (select
                  smi.trade_account as tradeAmt,
                  smi.mark_Id as code,
                  smi.mark_name as name,
                  date_format(smi.cur_time,'%Y%m%d%H%i') as curDate,
                  smi.trade_volume as tradeVol,
                  smi.updown_rate as upDown,
                  smi.current_price as tradePrice
              from stock_market_index_info as smi
              where smi.mark_Id in 
              <foreach collection="marketIds" item="marketId" open="(" separator="," close=")">
                  #{marketId}
              </foreach>
                and smi.cur_time=#{timePoint}) as tmp
                 left join stock_market_log_price as sml
                on tmp.code=sml.market_code and	date_format(sml.cur_date,'%Y%m%d')=date_format(#{timePoint},'%Y%m%d')
    </select>
    <select id="getStockTradeVol" resultType="map">
        select
            date_format(smi.cur_time,'%Y%m%d%H%i') as time,
            sum(smi.trade_volume) as count
        from stock_market_index_info as smi
        where smi.mark_id in
          <foreach collection="markedIds" item="marketId" open="(" separator="," close=")">
              #{marketId}
          </foreach>
          and smi.cur_time between #{startTime} and #{endTime}
        group by smi.cur_time
        order by time asc;
    </select>
   <!-- <select id="getStockUpDownRegion" resultType="map">
        SELECT
            tmp2.title,
            count(*) as count
        FROM (SELECT
                    CASE
                        WHEN tmp.rate > 0.07 THEN '>7%'
                        WHEN tmp.rate > 0.05 AND tmp.rate  &lt;= 0.07 THEN '5~7%'
                        WHEN tmp.rate > 0.03 AND tmp.rate  &lt;= 0.05 THEN '3~5%'
                        WHEN tmp.rate > 0 AND tmp.rate     &lt;= 0.03 THEN '0~3%'
                        WHEN tmp.rate > -0.03 AND tmp.rate &lt;= 0 THEN '-3~0%'
                        WHEN tmp.rate > -0.05 AND tmp.rate &lt;= -0.03 THEN '-5~-3%'
                        WHEN tmp.rate > -0.07 AND tmp.rate &lt;= -0.05 THEN '-7~-5%'
                        else '&lt; -7%'
                    END 'title'
              FROM (select
                        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as rate
                    FROM stock_rt_info as sri
        where sri.cur_time = #{timePoint}) as tmp) as tmp2
        group by tmp2.title;
    </select>-->

    <select id="getStockUpDownRegion" resultType="map">
        <![CDATA[
        SELECT
            tmp2.title,
            count(*) as count
        FROM (SELECT
                  CASE
                      WHEN tmp.rate > 0.07 THEN '>7%'
                      WHEN tmp.rate > 0.05 AND tmp.rate <= 0.07 THEN '5~7%'
                      WHEN tmp.rate > 0.03 AND tmp.rate <= 0.05 THEN '3~5%'
                      WHEN tmp.rate > 0 AND tmp.rate <= 0.03 THEN '0~3%'
                      WHEN tmp.rate > -0.03 AND tmp.rate <= 0 THEN '-3~0%'
                      WHEN tmp.rate > -0.05 AND tmp.rate <= -0.03 THEN '-5~-3%'
                      WHEN tmp.rate > -0.07 AND tmp.rate <= -0.05 THEN '-7~-5%'
                      else '<-7%'
                      END 'title'
              FROM (select
                        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as rate
                    FROM stock_rt_info as sri
                    where sri.cur_time = #{timePoint}) as tmp) as tmp2
        group by tmp2.title;


        ]]>
    </select>
    <select id="getStockInfoByCodeAndDate" resultType="com.pluto.stock.common.utils.Stock4MinuteDomain">
        select
            date_format(sri.cur_time,'%Y%m%d%H%i') as date,
            sri.trade_amount as tradeAmt,
            sri.stock_code as code,
            sri.min_price lowPrice,
            sri.pre_close_price as preClosePrice,
            sri.stock_name as name,
            sri.max_price as highPrice,
            sri.open_price as openPrice,
            sri.trade_volume as tradeVol,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where	sri.stock_code=#{stockCode}
          and sri.cur_time between #{startTime} and #{endTime}
    </select>
    <select id="getStockInfo4EvrDay" resultType="com.pluto.stock.common.utils.Stock4EvrDayDomain">
        select
            date_format(sri2.cur_time,'%Y%m%d') as date,
            sri2.trade_amount as tradeAmt,
            sri2.stock_code as code,
            sri2.min_price as lowPrice,
            sri2.stock_name as name,
            sri2.max_price as highPrice,
            sri2.open_price as openPrice,
            sri2.trade_volume as tradeVol,
            sri2.cur_price as closePrice,
            sri2.pre_close_price as preClosePrice
        from
            stock_rt_info as sri2
        where sri2.stock_code=#{stockCode} and sri2.cur_time in (
            select
                max(sri.cur_time) as closeDate
            from stock_rt_info as sri
            where sri.stock_code=#{stockCode} and sri.cur_time between #{startTime} and #{endTime}
            group by date_format(sri.cur_time,'%Y%m%d')
        )
    </select>
    <select id="getStockInfo4EvrWek" resultType="com.pluto.stock.common.utils.Stock4EvrWeekDomain">
        select
            date_format(sri2.cur_time,'%Y%m%d') as date,
            sri2.trade_amount as tradeAmt,
            sri2.stock_code as code,
            sri2.min_price as lowPrice,
            sri2.stock_name as name,
            sri2.max_price as highPrice,
            sri2.open_price as openPrice,
            sri2.trade_volume as tradeVol,
            sri2.cur_price as closePrice,
            sri2.pre_close_price as preClosePrice
        from
            stock_rt_info as sri2
        where sri2.stock_code=#{stockCode} and sri2.cur_time in (
            select
                max(sri.cur_time) as closeDate
            from stock_rt_info as sri
            where sri.stock_code=#{stockCode} and sri.cur_time between #{startTime} and #{endTime}
            group by date_format(sri.cur_time,'%Y%m%d')
        )
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_market_index_info
        where  id = #{id,jdbcType=VARCHAR} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.pluto.stock.pojo.StockMarketIndexInfo" useGeneratedKeys="true">
        insert into stock_market_index_info
        ( id,mark_Id,cur_time
        ,mark_name,cur_point,current_price
        ,updown_rate,trade_account,trade_volume
        )
        values (#{id,jdbcType=VARCHAR},#{markId,jdbcType=CHAR},#{curTime,jdbcType=TIMESTAMP}
        ,#{markName,jdbcType=VARCHAR},#{curPoint,jdbcType=DECIMAL},#{currentPrice,jdbcType=DECIMAL}
        ,#{updownRate,jdbcType=DECIMAL},#{tradeAccount,jdbcType=BIGINT},#{tradeVolume,jdbcType=BIGINT}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.pluto.stock.pojo.StockMarketIndexInfo" useGeneratedKeys="true">
        insert into stock_market_index_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="markId != null">markId,</if>
                <if test="curTime != null">curTime,</if>
                <if test="markName != null">markName,</if>
                <if test="curPoint != null">curPoint,</if>
                <if test="currentPrice != null">currentPrice,</if>
                <if test="updownRate != null">updownRate,</if>
                <if test="tradeAccount != null">tradeAccount,</if>
                <if test="tradeVolume != null">tradeVolume,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">id = #{id,jdbcType=VARCHAR},</if>
                <if test="markId != null">mark_Id = #{markId,jdbcType=CHAR},</if>
                <if test="curTime != null">cur_time = #{curTime,jdbcType=TIMESTAMP},</if>
                <if test="markName != null">mark_name = #{markName,jdbcType=VARCHAR},</if>
                <if test="curPoint != null">cur_point = #{curPoint,jdbcType=DECIMAL},</if>
                <if test="currentPrice != null">current_price = #{currentPrice,jdbcType=DECIMAL},</if>
                <if test="updownRate != null">updown_rate = #{updownRate,jdbcType=DECIMAL},</if>
                <if test="tradeAccount != null">trade_account = #{tradeAccount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">trade_volume = #{tradeVolume,jdbcType=BIGINT},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.pluto.stock.pojo.StockMarketIndexInfo">
        update stock_market_index_info
        <set>
                <if test="markId != null">
                    mark_Id = #{markId,jdbcType=CHAR},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
                <if test="markName != null">
                    mark_name = #{markName,jdbcType=VARCHAR},
                </if>
                <if test="curPoint != null">
                    cur_point = #{curPoint,jdbcType=DECIMAL},
                </if>
                <if test="currentPrice != null">
                    current_price = #{currentPrice,jdbcType=DECIMAL},
                </if>
                <if test="updownRate != null">
                    updown_rate = #{updownRate,jdbcType=DECIMAL},
                </if>
                <if test="tradeAccount != null">
                    trade_account = #{tradeAccount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=BIGINT},
                </if>
        </set>
        where   id = #{id,jdbcType=VARCHAR} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.pluto.stock.pojo.StockMarketIndexInfo">
        update stock_market_index_info
        set 
            mark_Id =  #{markId,jdbcType=CHAR},
            cur_time =  #{curTime,jdbcType=TIMESTAMP},
            mark_name =  #{markName,jdbcType=VARCHAR},
            cur_point =  #{curPoint,jdbcType=DECIMAL},
            current_price =  #{currentPrice,jdbcType=DECIMAL},
            updown_rate =  #{updownRate,jdbcType=DECIMAL},
            trade_account =  #{tradeAccount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=BIGINT}
        where   id = #{id,jdbcType=VARCHAR} 
    </update>
</mapper>
